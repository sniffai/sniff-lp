import React from 'react';
import { useState } from 'react';
import { motion } from 'framer-motion';
import './index.css';

export default function App() {
  const [lang, setLang] = useState('en');

  const translations = {
    en: {
      title: 'Sniff üê∂ ‚Äì The AI Dog Sniffing Out Airdrops and Injustice',
      subtitle: 'Sniff is your AI-powered watchdog ‚Äì hunting valuable airdrops and challenging real-world cruelty.',
      cta: 'üöÄ Explore the Sniff Mission',
      footer: 'Built by humans. Powered by dogs. Driven by justice. ¬© 2025 Sniff Protocol',
      toggle: 'Êó•Êú¨Ë™û„Å∏',
      requirements: 'Requirements',
      why: 'Why Sniff?',
      whyText: `Sniff isn‚Äôt just another crypto analytics tool‚Äîit‚Äôs your unfair advantage in the airdrop race.

      In Web3, information overload is constant. Every day brings a new project, a new promise, a new buzz. But most of them are noise. Scammy Discord servers, fake Twitter hype, paid influencers‚Äîall manipulating attention. By the time the masses catch on, the real opportunities are long gone.
      
      Sniff is different. It‚Äôs your personal watchdog‚Äîa decentralized AI system trained to sniff out airdrops before they surface. We deploy multiple AI agents, each with deep domain expertise:
      - NLP models read the tone of announcements and developer updates
      - Smart contract evaluators flag honeypots and flawed tokenomics
      - Social signal agents detect inorganic virality and bot-driven campaigns
      - Memory agents remember past scams, rug pulls, and pump patterns
      
      What you get is not a list of projects. You get intelligence. Curated, explainable airdrop leads scored and filtered to match your risk profile and preferences. It‚Äôs discovery without distraction. Efficiency without compromise.
      
      Sniff isn‚Äôt chasing influencers or alpha groups‚Äîit‚Äôs building a machine that finds what others miss. We don‚Äôt wait for hype to validate a project. We analyze, score, and sniff before the crowd even hears a bark.
      
      But there‚Äôs more. Every sniff you follow also fights injustice. A fixed percentage of the protocol‚Äôs revenue goes directly to real-world animal rescue programs. In regions where dogs are abused, abandoned, or euthanized in secret, Sniff brings visibility, funding, and action. We partner with transparent organizations in Japan, the U.S., Southeast Asia, and beyond to create systemic change.
      
      In a world where profit usually comes at the expense of ethics, Sniff proves you can win both ways. Sniff is the first airdrop protocol that‚Äôs not just optimized for financial alpha‚Äîbut for moral alpha too.
      
      It‚Äôs time to replace noise with trust. Replace hype with detection. Replace apathy with impact.
      
      Built by humans. Powered by dogs. Trained to sniff opportunity‚Äîand injustice.
      `,
      how: 'How Sniff Score Works',
      howText: `The Sniff Score is not just a number. It‚Äôs a dynamic, explainable signal generated by a decentralized ensemble of AI agents‚Äîeach trained in a specific analytical domain‚Äîto detect, evaluate, and prioritize airdrop-worthy Web3 projects before the crowd.

Sniff‚Äôs architecture is modeled after multi-agent systems used in swarm robotics and adversarial inference environments. Each agent operates independently with its own model, data set, and evaluation heuristics. Their insights are then federated via a trust-weighted voting system, producing a final Sniff Score.

‚ñ† NLP Agents (Natural Language Processing)
These agents process whitepapers, dev updates, social media posts, and community messages. They assess semantic tone, rhetorical consistency, presence of evasive or promotional language, and similarity to historical scam signatures. They detect red flags like vague roadmaps, excessive future promises, or sudden pivot language.

‚ñ† Smart Contract Evaluators
Sniff scans token contracts for structural and behavioral risks: developer wallet concentration, mint/burn functions, ownership transfer logic, honeypot conditions, and time-locked functions. It incorporates static analysis tools like Slither and Mythril, combined with Sniff‚Äôs proprietary ‚ÄúEthical Function Score‚Äù (EFS), to measure on-chain integrity.

‚ñ† Social Signal Detectors
These agents analyze account age distribution, engagement velocity, hashtag dynamics, influencer overlap, and known bot cluster traces. Using Sniff‚Äôs ‚ÄúPattern Injection Score,‚Äù they assess how closely a project‚Äôs growth mirrors prior inorganic campaigns‚Äîmeasuring not popularity, but authenticity.

‚ñ† Memory Agents
Sniff‚Äôs memory subsystem records every past evaluation, tracking the long-term accuracy and volatility of each agent. These histories feed into Dynamic Agent Weighting‚Äîan adaptive feedback loop that reduces reliance on underperforming signals and boosts agents with proven precision.

All agents vote on a normalized score between 0‚Äì10, with weights adjusted via temporal trust coefficients. The final Sniff Score isn‚Äôt static‚Äîit reflects continuous updates from real-time data, agent performance, and evolving threat models.

Sniff doesn‚Äôt just tell you ‚Äúwhat‚Äôs hot‚Äù‚Äîit explains why. It gives you actionable intelligence, not just alerts. Every score is backed by transparent, component-wise rationales that experienced traders and researchers can audit.

This isn‚Äôt sentiment analysis. It‚Äôs infrastructure-grade AI vigilance‚Äîbuilt to scale, built to detect, built to be trusted.

Sniff Score: because in Web3, trust isn't given. It's sniffed out.`,
      utility: 'What $SNIFF Token Does',
      utilityList: [
        "Unlocks personalized airdrop dashboards, real-time cross-chain sniff alerts, and scoring insights powered by decentralized multi-agent AI.",
        "No-code interface to train your own custom AI agent‚Äîtailored for specific domains (DeFi, Memecoin, NFT) or scam-immune behavior patterns.",
        "Vote on sniff target priorities, agent upgrades, funding for dog rescue partners, and protocol ethics via SniffDAO.",
        "Your $SNIFF activity affects your SniffRank, which adjusts UI personalization strength, alpha access, and leaderboard placement.",
        "Earn NFT badges, agent beta access, and participation incentives for usage, feedback, and ethical contribution.",
        "A portion of fees is programmatically routed to trusted global dog protection NGOs‚Äîfully transparent and auditable on-chain."
      ],      
      giveBack: 'Give Back to Real Dogs',
      giveBackText: `Sniff isn‚Äôt just a tool for sniffing airdrops‚Äîit‚Äôs an instrument of change in the real world. A portion of every $SNIFF transaction directly supports animal welfare through verified dog rescue and no-kill shelters. 

Every year, millions of dogs worldwide face neglect, abuse, and abandonment. According to recent statistics, an estimated 3.3 million dogs enter U.S. shelters alone, with over 1.5 million euthanized due to overcrowding and lack of resources. In Japan, over 50,000 dogs are abandoned annually, and an alarming number of them are subjected to the horrors of puppy mills, where they face abuse and malnutrition.

Sniff partners with trusted organizations across the globe, including rescues like the Humane Society, to directly address issues like overbreeding, abandonment, puppy mills, and the inhumane dog meat trade still prevalent in certain parts of the world. By using $SNIFF, you aren‚Äôt just discovering high-value Web3 projects‚Äîyou‚Äôre contributing to a better world for dogs who need it the most. 

Through the Sniff Protocol, we create a direct impact by ensuring that a portion of every token transaction goes towards animal rescue efforts. Whether it‚Äôs funding spay/neuter programs, supporting disaster response teams, or lobbying for stricter animal welfare laws, Sniff allows you to contribute while you explore and profit from Web3. Your participation brings both financial and moral reward, creating a legacy of ethical wealth-building in the blockchain space.

The more $SNIFF you use, the more impact you create. Every transaction, every vote, and every dollar spent is an investment in a better future for dogs in need. With Sniff, you can actively fight the injustices of the world while enjoying the benefits of decentralized finance‚Äîand know that your actions are creating real-world change, one sniff at a time.`,
      roadmap: 'Roadmap',
      tech: 'Technical Foundations',
      techText: `Sniff is powered by a real-time, decentralized multi-agent AI architecture. Each airdrop is independently analyzed by specialized AI agents‚Äîlarge language models (LLMs) for semantic analysis, on-chain graph analytics engines for token behavior, anomaly detection models for social metrics, and reputation-based memory subsystems. These agents use federated voting with weighted trust scores to generate a robust, interpretable Sniff Score.

Our AI stack runs on serverless edge infrastructure, optimizing for latency and verifiability. Developers can plug in new agents, deploy local fine-tuned models, or access aggregated scoring through our open API. The system is designed for transparency, auditability, and long-term adaptability to adversarial crypto dynamics.`,
      value: 'Why It Matters',
      valueText: `Crypto moves fast. Scams move faster. New users and even seasoned holders often fall prey to hyped projects with no substance. Sniff is your intelligent guard dog‚Äîcutting through the noise, surfacing ethical projects, and redistributing value to where it matters: real-world impact and justice.

$SNIFF is more than just a meme token. It's a utility layer for discovery, decision-making, and decentralized enforcement of ethics in Web3.`,
roadmapItems: [
  "Q2 2025: Launch Sniff Score MVP and initiate first real-world donations",
  "Q3 2025: Integrate public Sniff dashboards, NFT badge system, and DAO-based project voting",
  "Q4 2025: Release Sniff API, support multichain sniffing, and beta launch of RescueChain (fund distribution layer)",
  "Q1 2026: Alpha release of SniffNet ‚Äî create/train custom AI sniff agents with visualized behavior",
  "Q2 2026: Launch SniffCare ‚Äî wearable-integrated dog emotion and preference interpreter",
  "Q4 2026: Publish the SniffConstitution ‚Äî global ethical framework for canine welfare",
  "Q1 2027: Begin SniffNation beta ‚Äî decentralized canine citizenship and incentive economy",
  "Late 2027+: Expand global infrastructure toward autonomous AI-sniffed dog-rights protocol",
  "Future: Every dog is recognized as a sovereign being with digital dignity and agency"
],
recentSniffs: 'Recent Sniffs / Service Highlights',
demoSniffs: [
  {
    name: 'Supporting Local Rescue Organizations',
    type: 'Community Impact',
    requirements: 'Partnerships with local dog rescue groups and shelters.',
    description: 'Sniff is working directly with small, local organizations to support dog rescue missions. These partnerships help ensure that a portion of every $SNIFF token transaction goes towards real-life animal welfare, supporting shelters that are often underfunded.'
  },
  {
    name: 'Ongoing Donations for Dog Welfare',
    type: 'Animal Welfare',
    requirements: 'Contributions made to no-kill shelters and dog rehabilitation centers.',
    description: 'We have made initial donations to several no-kill shelters and dog rehabilitation programs. These ongoing efforts aim to provide rescue dogs with medical treatment and safe living spaces while they await adoption.'
  },
  {
    name: 'Volunteer and Rescue Support Activities',
    type: 'Volunteer Work',
    requirements: 'Participation in volunteer initiatives to help rescued dogs.',
    description: 'Sniff is also supporting volunteer programs that offer training for rescued dogs, helping them become more adoptable. These programs provide educational materials and resources for new dog owners, ensuring that rescued dogs have a loving home.'
  }
]


    },
    ja: {
      title: 'Sniff üê∂ ‚Äì „Ç®„Ç¢„Éâ„É≠„Å®‰∏çÊ≠£„ÇíÂóÖ„ÅéÂàÜ„Åë„ÇãAIÁä¨',
      subtitle: 'Sniff„ÅØAI„ÅßÂãï„ÅèÁï™Áä¨„Åß„Åô„ÄÇ‰æ°ÂÄ§„ÅÇ„Çã„Ç®„Ç¢„Éâ„É≠„ÉÉ„Éó„Å®„ÄÅ‰∏ñÁïå„ÅÆ‰∏çÊù°ÁêÜ„ÇíÂóÖ„Åé„Å§„Åë„Åæ„Åô„ÄÇ',
      cta: 'üöÄ Sniff„ÅÆ‰ΩøÂëΩ„ÇíÁü•„Çã',
      footer: '‰∫∫„Åå‰Ωú„Çä„ÄÅÁä¨„ÅåÂóÖ„Åé„ÄÅÊ≠£Áæ©„ÅåÂãï„Åè„ÄÇ¬© 2025 Sniff Protocol',
      toggle: 'English',
      requirements: 'ÂèÇÂä†Êù°‰ª∂',
      why: '„Å™„ÅúSniff„Å™„ÅÆ„ÅãÔºü',
      whyText: `Sniff„ÅØ„ÄÅ„Åü„Å†„ÅÆ‰ªÆÊÉ≥ÈÄöË≤®„ÉÑ„Éº„É´„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ„Ç®„Ç¢„Éâ„É≠„ÉÉ„ÉóÁ´∂‰∫â„ÇíÂãù„Å°Êäú„Åè„Åü„ÇÅ„Å´Ë®≠Ë®à„Åï„Çå„Åü„ÄÅAI„Å´„Çà„Çã„ÄåÂÖàË™≠„ÅøÂûã„ÅÆÂóÖË¶ö„Ç∑„Çπ„ÉÜ„É†„Äç„Åß„Åô„ÄÇ

‰ªä„ÅÆWeb3„ÅØ„ÄÅÊØéÊó•„ÅÆ„Çà„ÅÜ„Å´„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åå‰π±Á´ã„Åó„ÄÅÊ¨°„ÄÖ„Å®„Ç®„Ç¢„Éâ„É≠„ÉÉ„ÉóÊÉÖÂ†±„ÅåÊµÅ„Çå„Å¶„Åç„Åæ„Åô„ÄÇ„Åó„Åã„Åó„ÄÅ„Åù„Çå„Çâ„ÅÆÂ§ö„Åè„ÅØ‚ÄúÁΩ†‚Äù„Åß„Åô„ÄÇDiscord„ÅÆÊãõÂæÖ„É™„É≥„ÇØ„ÄÅË¨é„ÅÆX„Ç≠„É£„É≥„Éö„Éº„É≥„ÄÅ„Éê„Ç§„É©„É´Áãô„ÅÑ„ÅÆÂÅΩ„Ç¢„Ç´„Ç¶„É≥„Éà„ÄÅ„Åù„Åó„Å¶Ë≥áÈáë„ÇíÂ•™„ÅÑÈÄÉ„Åí„Çã„É©„Ç∞„Éó„É´„ÄÇ„Åù„Çì„Å™‰∏ñÁïå„Åß„ÄÅÊú¨ÂΩì„Å´‰æ°ÂÄ§„ÅÇ„Çã„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Çí„ÄÅ„Å©„ÅÜ„ÇÑ„Å£„Å¶Ë¶ãÊäú„Åè„ÅÆ„ÅãÔºü

Sniff„ÅÆÁ≠î„Åà„ÅØÊòéÁ¢∫„Åß„Åô„ÄÇ„ÄåÁä¨„ÅÆ„Çà„ÅÜ„Å´„ÄÅÂåÇ„ÅÑ„ÅßÂóÖ„ÅéÂàÜ„Åë„Çç„ÄÇ„Äç

Sniff„ÅØ„ÄÅË§áÊï∞„ÅÆAI„Ç®„Éº„Ç∏„Çß„É≥„Éà„Å´„Çà„Å£„Å¶ÊßãÊàê„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ
„ÉªË®ÄË™ûÂá¶ÁêÜAI„ÅØ„ÄÅÈñãÁô∫ËÄÖ„ÅÆÊäïÁ®ø„ÇÑ„Éõ„ÉØ„Ç§„Éà„Éö„Éº„Éë„Éº„ÅÆ„Éà„Éº„É≥„ÇíËß£Êûê
„Éª„Çπ„Éû„Éº„Éà„Ç≥„É≥„Éà„É©„ÇØ„Éà„Ç¢„Éä„É©„Ç§„Ç∂„Éº„ÅØ„ÄÅ‰∏çÊ≠£„Å™ÊåôÂãï„ÇÑ„Éà„Éº„ÇØ„É≥Ë®≠Ë®à„ÅÆÁüõÁõæ„ÇíÊ§úÂá∫
„ÉªSNSËß£Êûê„Ç®„É≥„Ç∏„É≥„ÅØ„ÄÅ„Éú„ÉÉ„ÉàÊã°Êï£„ÇÑÂÅΩË£Ö„Éê„Ç∫„Çí„É™„Ç¢„É´„Çø„Ç§„É†„ÅßÁõ£Ë¶ñ
„ÉªË®òÊÜ∂„Ç®„Éº„Ç∏„Çß„É≥„Éà„ÅØ„ÄÅÈÅéÂéª„ÅÆË©êÊ¨∫„ÉªÊàêÂäü‰æã„ÇíÂ≠¶Áøí„Åó„ÄÅ„Éë„Çø„Éº„É≥„Éû„ÉÉ„ÉÅ„É≥„Ç∞„ÅßË≠¶Âëä„ÇíÁô∫‰ø°

Sniff„ÅåÊèê‰æõ„Åô„Çã„ÅÆ„ÅØ„Äå„É™„Çπ„Éà„Äç„Åß„ÅØ„Å™„Åè„ÄåÊ¥ûÂØü„Äç„Åß„Åô„ÄÇÂçò„Å™„ÇãÊÉÖÂ†±„Åß„ÅØ„Å™„Åè„ÄÅAI„Å´„Çà„Å£„Å¶‚ÄúÊú¨ÂΩì„Å´ÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„Ç®„Ç¢„Éâ„É≠„ÉÉ„Éó‚Äù„Å†„Åë„Çí„ÄÅ„É™„Çπ„ÇØÂà•„Éª„ÉÜ„Éº„ÉûÂà•„Å´Êï¥ÁêÜ„Åó„Å¶ÈÄöÁü•„ÄÇ„ÅÇ„Å™„Åü„ÅØÂà§Êñ≠„Å†„Åë„Å´ÈõÜ‰∏≠„Åô„Çå„Å∞„ÅÑ„ÅÑ„ÄÇ„Éé„Ç§„Ç∫„ÇÇ„ÄÅ‰ΩúÊ•≠„ÇÇ„ÄÅ„Éï„Ç£„É´„Çø„Éº„ÇÇ‰∏çË¶Å„Åß„Åô„ÄÇ

Sniff„ÅØ„ÄÅË™∞„Åã„ÅÆÁô∫‰ø°„ÇÑ„Ç¢„É´„Éï„Ç°„Ç∞„É´„Éº„Éó„Å´‰æùÂ≠ò„Åó„Åæ„Åõ„Çì„ÄÇSniff„ÅØ„ÄÅË™∞„Çà„Çä„ÇÇÊó©„ÅèÊ∞ó„Å•„Åç„ÄÅÁã¨Ëá™„ÅÆ„É≠„Ç∏„ÉÉ„ÇØ„Åß‚Äú„Åæ„Å†Ë™∞„ÇÇÂê†„Åà„Å¶„ÅÑ„Å™„ÅÑ„ÉÅ„É£„É≥„Çπ‚Äù„ÇíÁô∫Êéò„Åó„Åæ„Åô„ÄÇ

„Åï„Çâ„Å´Sniff„ÅÆÂ†±ÈÖ¨„É¢„Éá„É´„Å´„ÅØ„ÄÅ„ÄåÁèæÂÆü‰∏ñÁïå„Åß„ÅÆÊ≠£Áæ©„Äç„ÅåÁµÑ„ÅøËæº„Åæ„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Éó„É≠„Éà„Ç≥„É´„ÅåÂæó„ÅüÂèéÁõä„ÅÆ‰∏ÄÈÉ®„ÅØ„ÄÅ‰∏ñÁïå‰∏≠„ÅÆ‰øùË≠∑Áä¨„ÉªÊÆ∫Âá¶ÂàÜ„Çº„É≠Ê¥ªÂãï„ÉªÁÅΩÂÆ≥ÊïëÂä©„ÉªÁπÅÊÆñÂ†¥ÂïèÈ°å„Å∏„ÅÆÂØæÁ≠ñË≤ª„Å®„Åó„Å¶ÂØÑ‰ªò„Åï„Çå„Åæ„Åô„ÄÇÊó•Êú¨„ÄÅ„Ç¢„Ç∏„Ç¢„ÄÅÊ¨ßÁ±≥‚Ä¶Âú∞Âüü„Åî„Å®„ÅÆÂõ£‰Ωì„Å®ÈÄ£Êê∫„Åó„ÄÅAI„Å®Web3„ÅÆÂäõ„ÅßÂãïÁâ©Á¶èÁ•â„ÅÆÊßãÈÄ†„ÇíÂ§â„Åà„Å¶„ÅÑ„Åç„Åæ„Åô„ÄÇ

Sniff„ÅØ„ÄÅÂÑ≤„Åë„Å®ÂÄ´ÁêÜ„Çí‰∏°Á´ã„Åï„Åõ„Åü‰∏ñÁïåÂàù„ÅÆAI„Éó„É≠„Éà„Ç≥„É´„Åß„Åô„ÄÇ
ÂóÖ„ÅéÂΩì„Å¶„Çã„ÅÆ„ÅØ„ÄÅ„ÉÅ„É£„É≥„Çπ„Å†„Åë„Åß„ÅØ„Å™„ÅÑ„ÄÇ‰∏çÊ≠£„ÇÇ„ÄÅÊ≤àÈªô„ÇÇ„ÄÅÁÑ°Èñ¢ÂøÉ„Åï„Åà„ÇÇ„ÄÅSniff„ÅØÂóÖ„Åé„Å§„Åë„Çã„ÄÇ

Web3„ÅØ„ÄÅÂóÖË¶ö„ÅåË©¶„Åï„Çå„ÇãÊôÇ‰ª£„Å´ÂÖ•„Çä„Åæ„Åó„Åü„ÄÇ
Sniff‚Äî‚Äî„Åù„Çå„ÅØ„ÄÅÂê†„Åà„ÇãÂâç„Å´Ê∞ó„Å•„Åè„ÄÅÊñ∞„Åó„ÅÑÊ≠£Áæ©„ÅÆÂΩ¢„Åß„Åô„ÄÇ`,

      how: 'Sniff„Çπ„Ç≥„Ç¢„ÅÆ‰ªïÁµÑ„Åø',
      howText: `Sniff„Çπ„Ç≥„Ç¢„ÅØ„ÄÅÂçò„Å™„ÇãÊï∞ÂÄ§„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ„Åì„Çå„ÅØ„ÄÅË§áÊï∞„ÅÆÂ∞ÇÈñÄAI„Ç®„Éº„Ç∏„Çß„É≥„Éà„ÅåÂçîË™ø„Åó„Å¶ÁîüÊàê„Åô„Çã„ÄåÂãïÁöÑ„Åã„Å§Ë™¨ÊòéÂèØËÉΩ„Å™‰ø°Âè∑„Äç„Åß„Åô„ÄÇÂêÑ„Ç®„Éº„Ç∏„Çß„É≥„Éà„ÅØÁã¨Ëá™„ÅÆÂ∞ÇÈñÄÈ†òÂüü„ÅßË®ìÁ∑¥„Åï„Çå„Å¶„Åä„Çä„ÄÅ‰ªñ„ÅÆË™∞„Çà„Çä„ÇÇÊó©„Åè„ÄÅ‰æ°ÂÄ§„ÅÇ„Çã„Ç®„Ç¢„Éâ„É≠„ÉÉ„ÉóÂÄôË£ú„ÇíÁâπÂÆö„ÉªË©ï‰æ°„ÉªÂÑ™ÂÖàÈ†Ü‰Ωç‰ªò„Åë„Åô„Çã„Åü„ÇÅ„Å´Ê©üËÉΩ„Åó„Åæ„Åô„ÄÇ

      Sniff„ÅÆ„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£„ÅØ„ÄÅÁæ§„É≠„Éú„ÉÜ„Ç£„ÇØ„Çπ„ÇÑÊïµÂØæÁöÑÊé®Ë´ñÁí∞Â¢É„ÅßÁî®„ÅÑ„Çâ„Çå„Çã„Éû„É´„ÉÅ„Ç®„Éº„Ç∏„Çß„É≥„Éà„Ç∑„Çπ„ÉÜ„É†„Å´ÁùÄÊÉ≥„ÇíÂæó„Å¶„ÅÑ„Åæ„Åô„ÄÇÂêÑ„Ç®„Éº„Ç∏„Çß„É≥„Éà„ÅØÁã¨Ëá™„ÅÆ„É¢„Éá„É´„ÄÅ„Éá„Éº„Çø„Çª„ÉÉ„Éà„ÄÅË©ï‰æ°„Ç¢„É´„Ç¥„É™„Ç∫„É†„ÇíÊåÅ„Å°„ÄÅÁã¨Á´ã„Åó„Å¶ÂàÜÊûê„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇÊúÄÁµÇÁöÑ„Å™„Çπ„Ç≥„Ç¢„ÅØ„ÄÅ‰ø°È†ºÂä†ÈáçÂûã„ÅÆ„Éï„Çß„Éá„É¨„Éº„ÉàÊäïÁ•®„Å´„Çà„Å£„Å¶Áµ±Âêà„Åï„Çå„Åæ„Åô„ÄÇ
      
      ‚ñ† NLP„Ç®„Éº„Ç∏„Çß„É≥„ÉàÔºàËá™ÁÑ∂Ë®ÄË™ûÂá¶ÁêÜÔºâ
      „Éõ„ÉØ„Ç§„Éà„Éö„Éº„Éë„Éº„ÄÅÈñãÁô∫ËÄÖ„ÅÆ„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„ÄÅSNSÊäïÁ®ø„ÄÅ„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„É°„ÉÉ„Çª„Éº„Ç∏„Å™„Å©„ÇíËß£Êûê„Åó„ÄÅÊñáËÑà„ÅÆ„Éà„Éº„É≥„ÄÅË´ñÁêÜÁöÑ‰∏ÄË≤´ÊÄß„ÄÅÊõñÊòß„Å™Ë°®Áèæ„ÇÑË™áÂºµÁöÑ„Éó„É≠„É¢„Éº„Ç∑„Éß„É≥„ÅÆÊúâÁÑ°„ÇíË©ï‰æ°„Åó„Åæ„Åô„ÄÇ„Åæ„Åü„ÄÅÈÅéÂéª„ÅÆË©êÊ¨∫„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å®È°û‰ºº„Åô„ÇãË®ÄË™û„Éë„Çø„Éº„É≥„ÇÇÊ§úÂá∫„Åó„Åæ„Åô„ÄÇ
      
      ‚ñ† „Çπ„Éû„Éº„Éà„Ç≥„É≥„Éà„É©„ÇØ„ÉàË©ï‰æ°„Ç®„Éº„Ç∏„Çß„É≥„Éà
      ÈñãÁô∫ËÄÖ„Ç¶„Ç©„É¨„ÉÉ„Éà„ÅÆÈõÜ‰∏≠Â∫¶„ÄÅ„Éü„É≥„Éà/„Éê„Éº„É≥Ê©üËÉΩ„ÄÅÊâÄÊúâÊ®©ÁßªË≠≤„É≠„Ç∏„ÉÉ„ÇØ„ÄÅ„Éè„Éã„Éº„Éù„ÉÉ„ÉàÊßãÈÄ†„ÄÅÊôÇÈñìÂà∂Èôê‰ªò„ÅçÊìç‰Ωú„Å™„Å©„ÇíËß£Êûê„Åó„Åæ„Åô„ÄÇSlither„ÇÑMythril„Å™„Å©„ÅÆÈùôÁöÑËß£Êûê„ÉÑ„Éº„É´„Å´Âä†„Åà„ÄÅSniffÁã¨Ëá™„ÅÆ„ÄåÂÄ´ÁêÜÊ©üËÉΩ„Çπ„Ç≥„Ç¢ÔºàEFSÔºâ„Äç„Å´„Çà„Å£„Å¶„ÄÅ„Ç≥„Éº„Éâ„ÅÆÂÅ•ÂÖ®ÊÄß„Å®ÈÄèÊòéÊÄß„ÇíÁ∑èÂêàË©ï‰æ°„Åó„Åæ„Åô„ÄÇ
      
      ‚ñ† „ÇΩ„Éº„Ç∑„É£„É´„Ç∑„Ç∞„Éä„É´Ê§úÂá∫„Ç®„Éº„Ç∏„Çß„É≥„Éà
      „Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆÂπ¥ÈΩ¢ÂàÜÂ∏É„ÄÅ„Ç®„É≥„Ç≤„Éº„Ç∏„É°„É≥„ÉàÈÄüÂ∫¶„ÄÅ„Éè„ÉÉ„Ç∑„É•„Çø„Ç∞„ÅÆÊã°Êï£ÊßãÈÄ†„ÄÅ„Ç§„É≥„Éï„É´„Ç®„É≥„Çµ„Éº„Å®„ÅÆÈáçË§á„ÄÅÊó¢Áü•„ÅÆBot„ÇØ„É©„Çπ„Çø„Å®„ÅÆ‰∏ÄËá¥„Å™„Å©„ÇíÂàÜÊûê„Åó„Åæ„Åô„ÄÇSniffÁã¨Ëá™„ÅÆ„Äå„Éë„Çø„Éº„É≥Ê≥®ÂÖ•„Çπ„Ç≥„Ç¢ÔºàPattern Injection ScoreÔºâ„Äç„Å´„Çà„Çä„ÄÅÊàêÈï∑„ÅåÊú¨Áâ©„ÅãÊçèÈÄ†„Åã„ÇíË¶ãÊ•µ„ÇÅ„Åæ„Åô„ÄÇ
      
      ‚ñ† „É°„É¢„É™„Éº„Ç®„Éº„Ç∏„Çß„É≥„Éà
      ÂêÑ„Ç®„Éº„Ç∏„Çß„É≥„Éà„ÅÆÈÅéÂéª„ÅÆË©ï‰æ°ÁµêÊûú„Å®ÂÆüÈöõ„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÊàêÊûú„ÇíË®òÈå≤„Åó„ÄÅÈï∑ÊúüÁöÑ„Å™Á≤æÂ∫¶„Éª‰∫àÊ∏¨„ÅÆÂÆâÂÆöÊÄß„ÇíÂ≠¶Áøí„Åó„Åæ„Åô„ÄÇ„Åì„ÅÆÂ±•Ê≠¥„ÅØ„ÄåÂãïÁöÑ„Ç®„Éº„Ç∏„Çß„É≥„ÉàÈáç„Åø‰ªò„ÅëÔºàDynamic Agent WeightingÔºâ„Äç„Å´ÂèçÊò†„Åï„Çå„ÄÅ‰ø°È†ºÊÄß„ÅÆÈ´ò„ÅÑ„Ç®„Éº„Ç∏„Çß„É≥„Éà„Åå„Çà„ÇäÂº∑„ÅèË©ï‰æ°„Å´ÂØÑ‰∏é„Åô„Çã„Çà„ÅÜÈÅ©Âøú„Åó„Åæ„Åô„ÄÇ
      
      „Åô„Åπ„Å¶„ÅÆ„Ç®„Éº„Ç∏„Çß„É≥„Éà„ÅØ 0„Äú10 „ÅÆÊ≠£Ë¶èÂåñ„Çπ„Ç≥„Ç¢„Å´Âü∫„Å•„ÅÑ„Å¶ÊäïÁ•®„Åó„ÄÅÊôÇÁ≥ªÂàóÁöÑ„Å™‰ø°È†º‰øÇÊï∞„ÅßÈáç„Åø‰ªò„Åë„Åï„Çå„Åæ„Åô„ÄÇSniff„Çπ„Ç≥„Ç¢„ÅØÈùôÁöÑ„Å™„ÇÇ„ÅÆ„Åß„ÅØ„Å™„Åè„ÄÅ„É™„Ç¢„É´„Çø„Ç§„É†„ÅÆ„Éá„Éº„Çø„ÄÅ„É¢„Éá„É´ÊÄßËÉΩ„ÄÅËÑÖÂ®Å„É¢„Éá„É´„ÅÆÈÄ≤Âåñ„Å´Âøú„Åò„Å¶Â∏∏„Å´Êõ¥Êñ∞„Åï„Çå„Åæ„Åô„ÄÇ
      
      Sniff„ÅØ„Äå‰Ωï„ÅåÊµÅË°å„Å£„Å¶„ÅÑ„Çã„Åã„Äç„Çí‰ºù„Åà„Çã„Å†„Åë„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ„Äå„Å™„Åú„Åù„ÅÜÂà§Êñ≠„Åó„Åü„Åã„Äç„Åæ„ÅßË™¨Êòé„Åó„Åæ„Åô„ÄÇÂá∫Âäõ„Åï„Çå„Çã„Çπ„Ç≥„Ç¢„ÅØ„ÄÅÁÜüÁ∑¥„Éà„É¨„Éº„ÉÄ„Éº„ÇÑ„É™„Çµ„Éº„ÉÅ„É£„Éº„ÅåÁõ£ÊüªÂèØËÉΩ„Å™„ÄÅÊßãÊàêË¶ÅÁ¥†„Åî„Å®„ÅÆÊ†πÊã†„ÇíÂÇô„Åà„Å¶„ÅÑ„Åæ„Åô„ÄÇ
      
      „Åì„Çå„ÅØÂçò„Å™„Çã„Çª„É≥„ÉÅ„É°„É≥„ÉàÂàÜÊûê„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ„Åì„Çå„ÅØ„Ç§„É≥„Éï„É©„Ç∞„É¨„Éº„Éâ„ÅÆAIÁõ£Ë¶ñ„É¨„Ç§„É§„Éº„Åß„Åô„ÄÇ„Çπ„Ç±„Éº„É´ÂèØËÉΩ„Åß„ÄÅÊ¨∫Áûû„Å´Âº∑„Åè„ÄÅ‰ø°È†º„Åï„Çå„Çã„Åπ„Åç‰ªïÁµÑ„Åø„ÄÇ
      
      Sniff„Çπ„Ç≥„Ç¢‚îÄ‚îÄWeb3„Åß„ÅØ‰ø°È†º„ÅØ‰∏é„Åà„Çâ„Çå„Çã„ÇÇ„ÅÆ„Åß„ÅØ„Å™„ÅÑ„ÄÇÂóÖ„ÅéÂΩì„Å¶„Çã„ÇÇ„ÅÆ„Å†„ÄÇ`,
      
      utility: '$SNIFF„Éà„Éº„ÇØ„É≥„ÅÆÊ©üËÉΩ',
      utilityList: [
        "„Éë„Éº„ÇΩ„Éä„É©„Ç§„Ç∫„Åï„Çå„Åü„Ç®„Ç¢„Éâ„É≠„ÉÉ„Éó„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÄÅ„ÇØ„É≠„Çπ„ÉÅ„Çß„Éº„É≥ÈÄöÁü•„ÄÅAI„Çπ„Ç≥„Ç¢„É™„É≥„Ç∞Ê©üËÉΩ„Å´„Ç¢„ÇØ„Çª„ÇπÂèØËÉΩ„ÄÇ",
        "„Éé„Éº„Ç≥„Éº„Éâ„ÅßËá™ÂàÜ„Å†„Åë„ÅÆAI„Çπ„Éã„Éï„Ç°„Éº„ÇíËÇ≤Êàê„ÄÇDeFi„ÇÑ„Éü„Éº„É†„Ç≥„Ç§„É≥ÁâπÂåñÂûã„ÄÅË©êÊ¨∫ËÄêÊÄßÂûã„Å™„Å©Â•Ω„Åø„Å´ÊúÄÈÅ©ÂåñÂèØËÉΩ„ÄÇ",
        "SniffÂØæË±°„ÅÆÂÑ™ÂÖàË®≠ÂÆö„ÄÅ„Ç®„Éº„Ç∏„Çß„É≥„ÉàÊîπËâØ„ÄÅÂãïÁâ©‰øùË≠∑ÊîØÊè¥Èáë„ÅÆÈÖçÂàÜ„ÄÅÂÄ´ÁêÜÂü∫Ê∫ñ„ÅÆÊõ¥Êñ∞„Å™„Å©„Å´ÊäïÁ•®ÂèØËÉΩ„ÄÇ",
        "$SNIFF„ÅÆ‰ΩøÁî®Ë°åÂãï„ÅåSniffRank„Å´ÂèçÊò†„Åï„Çå„ÄÅUI„Éë„Éº„ÇΩ„Éä„É©„Ç§„Ç∫„ÇÑÊó©ÊúüÊ©üËÉΩ„Ç¢„ÇØ„Çª„Çπ„ÄÅ„É©„É≥„Ç≠„É≥„Ç∞„Å´ÂΩ±Èüø„ÄÇ",
        "NFT„Éê„ÉÉ„Ç∏„ÄÅ„Ç®„Éº„Ç∏„Çß„É≥„ÉàŒ≤„Ç¢„ÇØ„Çª„Çπ„ÄÅ„Ç§„É≥„Çª„É≥„ÉÜ„Ç£„ÉñÈÖçÂ∏É„Å™„Å©„ÄÅÂÆüÈöõ„ÅÆÊ¥ªÂãï„Å´Âøú„Åò„Å¶Â†±ÈÖ¨„ÇíÁç≤Âæó„ÄÇ",
        "ÂèéÁõä„ÅÆ‰∏ÄÈÉ®„Åå„Çπ„Éû„Éº„Éà„Ç≥„É≥„Éà„É©„ÇØ„ÉàÁµåÁî±„Åß‰øùË≠∑Áä¨Âõ£‰Ωì„Å∏Ëá™ÂãïÈÖçÂàÜ„ÄÇÂÖ®„Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥„ÅØÈÄèÊòé„Å´Ë®òÈå≤„ÄÇ"
      ],
      giveBack: 'Áä¨„Åü„Å°„Å∏„ÅÆÈÇÑÂÖÉ',
      giveBackText: `Sniff„ÅØ„ÄÅÂçò„Å™„Çã„Ç®„Ç¢„Éâ„É≠„ÉÉ„ÉóÁô∫Ë¶ã„ÉÑ„Éº„É´„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ„Åù„Çå„ÅØ„ÄÅÁèæÂÆü‰∏ñÁïå„ÅÆÂ§âÂåñ„Çí‰øÉÈÄ≤„Åô„Çã„Åü„ÇÅ„ÅÆÊâãÊÆµ„Åß„ÇÇ„ÅÇ„Çä„Åæ„Åô„ÄÇ$SNIFF„ÅÆÂèñÂºï„ÅÆ‰∏ÄÈÉ®„ÅØ„ÄÅ‰ø°È†º„Åß„Åç„Çã‰øùË≠∑Áä¨Âõ£‰Ωì„ÇÑÊÆ∫Âá¶ÂàÜ„Çº„É≠„Ç∑„Çß„É´„Çø„Éº„Å´Áõ¥Êé•ÊîØÊè¥„Å®„Åó„Å¶ÈÄÅ„Çâ„Çå„Åæ„Åô„ÄÇ

ÊØéÂπ¥„ÄÅ‰∏ñÁïå‰∏≠„ÅßÊï∞Áôæ‰∏áÂåπ„ÅÆÁä¨„Åü„Å°„ÅåÁÑ°Ë¶ñ„Åï„Çå„ÄÅËôêÂæÖ„Åï„Çå„ÄÅÊîæÊ£Ñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Ç¢„É°„É™„Ç´„Åß„ÅØ330‰∏áÂåπ„ÇÇ„ÅÆÁä¨„Åå„Ç∑„Çß„É´„Çø„Éº„Å´ÂèéÂÆπ„Åï„Çå„ÄÅ„Åù„ÅÆ„ÅÜ„Å°150‰∏áÂåπ„ÅåÂèéÂÆπÊâÄ„ÅÆÈÅéÂØÜÁä∂ÊÖã„Å®Ë≥áÊ∫ê‰∏çË∂≥„ÅÆ„Åü„ÇÅ„Å´ÂÆâÊ•ΩÊ≠ª„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇÊó•Êú¨„Åß„ÇÇ„ÄÅÊØéÂπ¥5‰∏áÂåπ‰ª•‰∏ä„ÅÆÁä¨„ÅåÊîæÊ£Ñ„Åï„Çå„ÄÅ„Åù„ÅÆÂ§ö„Åè„Åå„Éë„Éî„Éº„Éü„É´„Å®„ÅÑ„ÅÜÂä£ÊÇ™„Å™ÁπÅÊÆñÊñΩË®≠„ÅßËôêÂæÖ„Åï„Çå„ÄÅÊ†ÑÈ§äÂ§±Ë™ø„ÇÑÂÅ•Â∫∑ÂïèÈ°å„Å´Ëã¶„Åó„Çì„Åß„ÅÑ„Åæ„Åô„ÄÇ

Sniff„ÅØ„ÄÅ‰∏ñÁïå‰∏≠„ÅÆ‰ø°È†º„Åß„Åç„ÇãÂõ£‰ΩìÔºà‰æã„Åà„Å∞„ÄÅ„Éí„É•„Éº„É°„Ç§„É≥„Éª„ÇΩ„Çµ„Ç®„ÉÜ„Ç£„ÇÑÂãïÁâ©ÊÑõË≠∑Âõ£‰Ωì„Å™„Å©Ôºâ„Å®ÊèêÊê∫„Åó„ÄÅÈÅéÂâ∞ÁπÅÊÆñ„ÄÅÊîæÊ£Ñ„ÄÅ„Éë„Éî„Éº„Éü„É´ÂïèÈ°å„Å´Âèñ„ÇäÁµÑ„Çì„Åß„ÅÑ„Åæ„Åô„ÄÇÊõ¥„Å´„ÅØ„ÄÅÁä¨ËÇâÊñáÂåñ„Å´ÂèçÂØæ„Åô„ÇãÊ¥ªÂãï„ÇÇË°å„Å£„Å¶„Åä„Çä„ÄÅ„Åì„Çå„Å´ÂØæ„Åó„Å¶„ÅÆÂïìËíôÊ¥ªÂãï„ÇÑÊ≥ïÁöÑÊîØÊè¥„ÇíË°å„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ

„Åì„Çå„Çâ„ÅÆÊîØÊè¥Ê¥ªÂãï„Å´„ÄÅ$SNIFF„ÅÆ‰ΩøÁî®„ÇíÈÄö„Åò„Å¶Ë≤¢ÁåÆ„Åß„Åç„Åæ„Åô„ÄÇ„Éà„Éº„ÇØ„É≥ÂèñÂºï„ÅÆ‰∏ÄÈÉ®„ÅØ„ÄÅÂéªÂã¢„ÉªÈÅøÂ¶ä„Éó„É≠„Ç∞„É©„É†„ÇÑÁä¨„ÅÆ‰øùË≠∑ÊñΩË®≠„Å∏„ÅÆÂØÑ‰ªò„Å´‰Ωø„Çè„Çå„Çã„Å†„Åë„Åß„Å™„Åè„ÄÅÁÅΩÂÆ≥ÂØæÂøú„ÉÅ„Éº„É†„ÇÑÂãïÁâ©Á¶èÁ•âÊ≥ï„ÅÆÂº∑Âåñ„ÅÆ„Åü„ÇÅ„ÅÆ„É≠„Éì„ÉºÊ¥ªÂãï„Å´„ÇÇÊ¥ªÁî®„Åï„Çå„Åæ„Åô„ÄÇÂÆüÈöõ„ÄÅ$SNIFF„Çí‰ΩøÁî®„Åô„Çã„Åì„Å®„Åß„ÄÅWeb3„ÇíÊé¢Á¥¢„Åó„Å™„Åå„Çâ„ÄÅÁèæÂÆü„ÅÆÂãïÁâ©‰øùË≠∑Ê¥ªÂãï„Å´ÂØæ„Åô„ÇãÂÖ∑‰ΩìÁöÑ„Å™Ë≤¢ÁåÆ„ÅåÂèØËÉΩ„Å®„Å™„Çä„Åæ„Åô„ÄÇ

„Åï„Çâ„Å´„ÄÅ$SNIFF„Çí‰Ωø„ÅÜ„Åì„Å®„ÅßÁ§æ‰ºöË≤¢ÁåÆ„ÅåÂ¢ó„Åô„Åì„Å®„ÅåÁ¢∫Ë™ç„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ$SNIFF„Çí‰Ωø„ÅÜ„Åü„Å≥„Å´„ÄÅÁèæÂÆü‰∏ñÁïå„ÅßÁä¨„Åü„Å°„Å´„Å®„Å£„Å¶„Çà„ÇäËâØ„ÅÑÊú™Êù•„Çí‰Ωú„Çã„Åü„ÇÅ„ÅÆÊäïË≥á„Å®„Å™„Çä„Åæ„Åô„ÄÇ‰æã„Åà„Å∞„ÄÅÊØéÊúà$SNIFF„Çí‰Ωø„ÅÜ„É¶„Éº„Ç∂„Éº1,000‰∫∫„ÅÇ„Åü„Çä„ÄÅÂ∞ë„Å™„Åè„Å®„ÇÇ50Âåπ„ÅÆÁä¨„ÅåÊñ∞„Åó„ÅÑÂÆ∂„Å´Ëøé„Åà„Çâ„Çå„Çã„Åì„Å®„ÅåÁõÆÊ®ô„Åß„Åô„ÄÇ

$SNIFF„Çí‰Ωø„ÅÜ„Åì„Å®„Åß„ÄÅ„ÅÇ„Å™„Åü„ÅØWeb3„ÇíÊé¢Á¥¢„Åó„Å™„Åå„ÇâÁèæÂÆü‰∏ñÁïå„ÅÆÂãïÁâ©‰øùË≠∑Ê¥ªÂãï„Å´Ë≤¢ÁåÆ„Åó„ÄÅÈÅìÂæ≥ÁöÑ„Å™Â†±ÈÖ¨„ÇÇÊâã„Å´ÂÖ•„Çå„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ„ÅÇ„Å™„Åü„ÅÆ1Âõû„ÅÆÂèñÂºï„Åå„ÄÅÁä¨„Åü„Å°„ÅÆÂëΩ„ÇíÊïë„ÅÑ„ÄÅ„Çà„ÇäËâØ„ÅÑÊú™Êù•„ÇíÊèê‰æõ„Åô„Çã„Åì„Å®„Å´„Å§„Å™„Åå„Çä„Åæ„Åô„ÄÇ‰ªä„Åô„Åê$SNIFF„Çí‰ΩøÁî®„Åó„Å¶„ÄÅ„ÅÇ„Å™„Åü„ÅÆÂΩ±ÈüøÂäõ„ÇíÊã°Â§ß„Åó„ÄÅÁ§æ‰ºöÁöÑ„Å´„ÇÇÂ§ß„Åç„Å™Â§âÂåñ„Çí„ÇÇ„Åü„Çâ„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ`,
      roadmap: '„É≠„Éº„Éâ„Éû„ÉÉ„Éó',
      roadmapItems: [
        "2025Âπ¥Q2ÔºöSniff„Çπ„Ç≥„Ç¢MVPÂÖ¨ÈñãÔºÜÂàùÂõûÂØÑ‰ªò„ÅÆÂÆüÊñΩ",
        "2025Âπ¥Q3ÔºöSniff„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÄÅNFT„Éê„ÉÉ„Ç∏„Ç∑„Çπ„ÉÜ„É†„ÄÅDAOÊäïÁ•®„Ç∑„Çπ„ÉÜ„É†„ÅÆÁµ±Âêà",
        "2025Âπ¥Q4ÔºöSniff APIÂÖ¨Èñã„ÄÅ„Éû„É´„ÉÅ„ÉÅ„Çß„Éº„É≥ÂØæÂøú„ÄÅRescueChainÔºàË≥áÈáëÂàÜÈÖç„É¨„Ç§„É§„ÉºÔºâ„ÅÆ„Éô„Éº„ÇøÁâà„É™„É™„Éº„Çπ",
        "2026Âπ¥Q1ÔºöSniffNet„Ç¢„É´„Éï„Ç°„É™„É™„Éº„Çπ ‚Äî „Ç´„Çπ„Çø„É†AI„Çπ„Éã„Éï„Ç°„Éº„Ç®„Éº„Ç∏„Çß„É≥„Éà„ÅÆ‰ΩúÊàê„Å®Ë®ìÁ∑¥„ÄÅÂèØË¶ñÂåñ„Åï„Çå„ÅüÊåôÂãï„ÅÆÊèê‰æõ",
        "2026Âπ¥Q2ÔºöSniffCareÂÖ¨Èñã ‚Äî „Ç¶„Çß„Ç¢„É©„Éñ„É´Áä¨„ÅÆÊÑüÊÉÖ„ÉªÂ•Ω„ÅøÈÄöË®≥„Ç∑„Çπ„ÉÜ„É†„ÅÆÊèê‰æõ",
        "2026Âπ¥Q4ÔºöSniffÊÜ≤Ê≥ï„ÅÆÂÖ¨Èñã ‚Äî ‰∏ñÁïåÁöÑ„Å™Áä¨„ÅÆÁ¶èÁ•â„ÅÆ„Åü„ÇÅ„ÅÆÂÄ´ÁêÜÁöÑÊû†ÁµÑ„Åø",
        "2027Âπ¥Q1ÔºöSniffNation„Éô„Éº„ÇøÈñãÂßã ‚Äî ÂàÜÊï£ÂûãÁä¨Â∏ÇÊ∞ëÊ®©„Ç∑„Çπ„ÉÜ„É†„Å®„Ç§„É≥„Çª„É≥„ÉÜ„Ç£„ÉñÁµåÊ∏à„ÅÆÈñãÂßã",
        "2027Âπ¥ÂæåÂçäÔºöËá™ÂæãÂûãAIÂóÖË¶öÁä¨Ê®©Âà©„Éó„É≠„Éà„Ç≥„É´„Å´Âêë„Åë„Åü„Ç∞„É≠„Éº„Éê„É´„Ç§„É≥„Éï„É©„ÅÆÊã°Â§ß",
        "Êú™Êù•Ôºö„Åô„Åπ„Å¶„ÅÆÁä¨„Åå„Éá„Ç∏„Çø„É´„ÅßÂ∞äÂé≥„Å®Ê®©Èôê„ÇíÊåÅ„Å§Â≠òÂú®„Å®„Åó„Å¶Ë™çË≠ò„Åï„Çå„Çã"
      ],
      recentSniffs: 'ÊúÄËøë„ÅÆSniffs / „Çµ„Éº„Éì„Çπ„Éè„Ç§„É©„Ç§„Éà',
      demoSniffs: [
        {
          name: 'Âú∞Âüü„ÅÆ‰øùË≠∑Âõ£‰Ωì„Çí„Çµ„Éù„Éº„Éà',
          type: '„Ç≥„Éü„É•„Éã„ÉÜ„Ç£„ÅÆÂΩ±Èüø',
          requirements: 'Âú∞Âüü„ÅÆÁä¨„ÅÆ‰øùË≠∑Âõ£‰Ωì„ÇÑ„Ç∑„Çß„É´„Çø„Éº„Å®„ÅÆÊèêÊê∫„ÄÇ',
          description: 'Sniff„ÅØ„ÄÅÂú∞Âüü„ÅÆÂ∞èË¶èÊ®°„Å™Áä¨„ÅÆ‰øùË≠∑Âõ£‰Ωì„Å®Áõ¥Êé•ÈÄ£Êê∫„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„Çå„Çâ„ÅÆÂõ£‰Ωì„Å∏„ÅÆÊîØÊè¥„Å´„Çà„Çä„ÄÅ$SNIFF„ÅÆÂèñÂºï„ÅÆ‰∏ÄÈÉ®„ÅåÂÆüÈöõ„ÅÆÂãïÁâ©Á¶èÁ•âÊ¥ªÂãï„Å´Ê¥ªÁî®„Åï„Çå„ÄÅË≥áÈáë„Åå‰∏çË∂≥„Åó„Å¶„ÅÑ„Çã„Ç∑„Çß„É´„Çø„Éº„ÇíÊîØÊè¥„Åó„Åæ„Åô„ÄÇ'
        },
        {
          name: 'Áä¨Á¶èÁ•â„Å∏„ÅÆÁ∂ôÁ∂öÁöÑ„Å™ÂØÑ‰ªò',
          type: 'ÂãïÁâ©Á¶èÁ•â',
          requirements: 'ÊÆ∫Âá¶ÂàÜ„Çº„É≠„Ç∑„Çß„É´„Çø„Éº„ÇÑÁä¨„ÅÆ„É™„Éè„Éì„É™„ÉÜ„Éº„Ç∑„Éß„É≥ÊñΩË®≠„Å∏„ÅÆÂØÑ‰ªò„ÄÇ',
          description: '„ÅÑ„Åè„Å§„Åã„ÅÆÊÆ∫Âá¶ÂàÜ„Çº„É≠„Ç∑„Çß„É´„Çø„Éº„ÇÑÁä¨„ÅÆ„É™„Éè„Éì„É™„ÉÜ„Éº„Ç∑„Éß„É≥„Éó„É≠„Ç∞„É©„É†„Å´ÂØÑ‰ªò„ÇíË°å„ÅÑ„Åæ„Åó„Åü„ÄÇ„Åì„Çå„Çâ„ÅÆÂØÑ‰ªò„ÅØ„ÄÅ‰øùË≠∑„Åï„Çå„ÅüÁä¨„Å´ÂåªÁôÇÊîØÊè¥„ÇíÊèê‰æõ„Åó„ÄÅÂÆâÂÖ®„Å™ÁîüÊ¥ªÁí∞Â¢É„ÇíÊèê‰æõ„Åô„Çã„Åü„ÇÅ„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ'
        },
        {
          name: '„Éú„É©„É≥„ÉÜ„Ç£„Ç¢„Å®‰øùË≠∑Ê¥ªÂãï„Å∏„ÅÆÊîØÊè¥',
          type: '„Éú„É©„É≥„ÉÜ„Ç£„Ç¢Ê¥ªÂãï',
          requirements: '‰øùË≠∑„Åï„Çå„ÅüÁä¨„ÇíÊîØÊè¥„Åô„Çã„Åü„ÇÅ„ÅÆ„Éú„É©„É≥„ÉÜ„Ç£„Ç¢Ê¥ªÂãï„Å´ÂèÇÂä†„ÄÇ',
          description: 'Sniff„ÅØ„ÄÅ‰øùË≠∑„Åï„Çå„ÅüÁä¨„Åå„Çà„ÇäËâØ„ÅÑÂÆ∂Â∫≠„Å´Ëøé„Åà„Çâ„Çå„Çã„Çà„ÅÜÊîØÊè¥„Åô„Çã„Åü„ÇÅ„ÅÆ„Éú„É©„É≥„ÉÜ„Ç£„Ç¢„Éó„É≠„Ç∞„É©„É†„ÇÇ„Çµ„Éù„Éº„Éà„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„Çå„Çâ„ÅÆ„Éó„É≠„Ç∞„É©„É†„Åß„ÅØ„ÄÅÁä¨„ÅÆ„Éà„É¨„Éº„Éã„É≥„Ç∞„ÇÑÊñ∞„Åó„ÅÑÈ£º„ÅÑ‰∏ª„Å´Âêë„Åë„ÅüÊïôËÇ≤Ë≥áÊñô„ÇíÊèê‰æõ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ'
        }
      ]      
    }
  };

  const t = translations[lang];

  return (
    <main className="bg-gradient-to-br from-zinc-950 to-zinc-900 text-white min-h-screen px-6 py-10 font-sans">
      <div className="text-right mb-4">
        <button onClick={() => setLang(lang === 'en' ? 'ja' : 'en')} className="text-sm text-orange-400 hover:underline">
          {t.toggle}
        </button>
      </div>

      <section className="text-center max-w-4xl mx-auto py-20">
        <img src="/hero-sniff.png" alt="Sniff AI Dog" className="mx-auto mb-8 w-48 h-48 rounded-full shadow-lg border border-orange-500 object-cover" />
        <motion.h1 initial={{ opacity: 0, y: -20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.8 }} className="text-5xl font-extrabold text-orange-400 tracking-tight">
          {t.title}
        </motion.h1>
        <p className="text-xl text-zinc-300 mt-6 leading-relaxed">{t.subtitle}</p>
        <a href="#sniffs" className="inline-block mt-8 px-8 py-4 bg-orange-500 hover:bg-orange-600 rounded-full text-white text-lg font-semibold shadow-lg transition-all">
          {t.cta}
        </a>
      </section>

      {[['why', 'whyText'], ['how', 'howText'], ['utility', 'utilityList'], ['giveBack', 'giveBackText'], ['roadmap', 'roadmapItems']].map(([headingKey, contentKey], i) => (
        <section key={headingKey} className="mt-20 max-w-4xl mx-auto px-4">
          <h2 className="text-3xl font-bold text-orange-300 mb-4 border-b border-orange-400 pb-2">{t[headingKey]}</h2>
          {Array.isArray(t[contentKey]) ? (
            <ul className="list-disc pl-6 text-zinc-300 space-y-2">
              {t[contentKey].map((item, idx) => <li key={idx}>{item}</li>)}
            </ul>
          ) : (
            <p className="text-zinc-300 whitespace-pre-line leading-relaxed">{t[contentKey]}</p>
          )}
        </section>
      ))}

<section id="sniffs" className="mt-20 max-w-4xl mx-auto">
  <h2 className="text-3xl font-bold text-orange-300 mb-6 border-b border-orange-400 pb-2">{t.recentSniffs}</h2>
  <div className="grid gap-8 md:grid-cols-3 sm:grid-cols-1">
    {t.demoSniffs.map((s, i) => (
      <motion.div key={i} className="bg-zinc-800 p-6 rounded-2xl shadow-lg hover:shadow-orange-400 transition-all border border-zinc-700" initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: i * 0.2 }}>
        <h3 className="text-xl font-bold text-white mb-1">{s.name} <span className="text-sm text-zinc-400">({s.type})</span></h3>
        <p className="text-sm text-zinc-400">{s.requirements}</p>
        <p className="text-zinc-100 text-sm mt-1">{s.description}</p>
      </motion.div>
    ))}
  </div>
</section>

      <footer className="text-center mt-32 text-zinc-500 text-sm border-t border-zinc-700 pt-8">
        <p>{t.footer}</p>
      </footer>
    </main>
  );
}
